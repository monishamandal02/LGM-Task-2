{"version":3,"sources":["components/Navbar.js","components/UserCard.js","components/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","onSetIsClicked","className","onClick","UserCard","email","first_name","last_name","avatar","src","alt","style","width","height","Loader","show","App","useState","isClicked","setIsClicked","data","setData","isLoader","setIsLoader","useEffect","Axios","get","then","response","console","log","map","val","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAaeA,EAbA,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAId,OACI,qBAAKC,UAAU,SAAf,SACI,+BACI,6BAAI,mBAAGA,UAAU,QAAb,uBACJ,wBAAQC,QAPJ,WACZF,EAAe,IAMkBC,UAAU,iBAAnC,6B,QCYDE,EApBE,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,MAAOC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,UAAWC,EAAa,EAAbA,OAC9C,OACI,qBAAKN,UAAU,+BAAf,SACI,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,iCAAKO,IAAKD,EAAQE,IAAI,SAASC,MAAO,CAACC,MAAO,SAA9C,QAA6D,CAACC,OAAQ,YAE1E,qBAAKX,UAAU,iBAAf,SACI,sBAAKA,UAAU,YAAf,UACI,+BAAM,4BAAII,EAAW,IAAIC,MACzB,mBAAGL,UAAU,QAAb,SAAsBG,iBCLnCS,EANA,SAAC,GACZ,OADyB,EAAXC,KAGN,qBAAKb,UAAU,WAAkB,I,iBC8C9Bc,MA1Cf,WAAe,MAEqBC,mBAAS,GAF9B,mBAENC,EAFM,KAEKC,EAFL,OAGWF,mBAAS,MAHpB,mBAGNG,EAHM,KAGAC,EAHA,OAImBJ,oBAAS,GAJ5B,mBAINK,EAJM,KAIIC,EAJJ,KA2Bb,OAJAC,qBAAU,WACRN,IAfAK,GAAY,GAEZE,IAAMC,IAAI,sCAAsCC,MAC9C,SAACC,GACCC,QAAQC,IAAI,qBACZT,EAAQO,EAASR,KAAKA,MAGtBG,GAAY,SAQf,CAACL,IAGF,sBAAKhB,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,eAAgBkB,IACxB,qBAAKjB,UAAU,MAAf,SAEGkB,GAAMA,EAAKW,KAAI,SAACC,GACf,OAAO,cAAC,EAAD,CAAU1B,WAAY0B,EAAI1B,WAAYC,UAAWyB,EAAIzB,UAAWF,MAAO2B,EAAI3B,MAAOG,OAAQwB,EAAIxB,cAIzG,cAAC,EAAD,CAAQO,KAAMO,QChCLW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6598bc2f.chunk.js","sourcesContent":["const Navbar = ({ onSetIsClicked }) => {\n    const clicked = () => {\n        onSetIsClicked(1);\n    }\n    return (\n        <div className=\"Navbar\">\n            <ul>\n                <li><a className=\"brand\">Clients</a></li>\n                <button onClick={clicked}className=\"button button1\">Get Users</button>\n            </ul>\n        </div>\n    )\n}\nexport default Navbar;","const UserCard = ({ email, first_name, last_name, avatar }) => {\n    return(\n        <div className=\"container-card col-4 col-s-6\">\n            <div className=\"card\">\n                <div className='row'>\n                    <div className='col-3 col-s-12'>\n                        <img src={avatar} alt=\"Avatar\" style={{width: \"100%\"}}style={{height: \"100%\"}}/>\n                    </div>\n                    <div className='col-9 col-s-12'>\n                        <div className=\"container\">\n                            <span><b>{first_name+' '+last_name}</b></span>\n                            <p className='email'>{email}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default UserCard;","const Loader = ({ show }) => {\n    return (\n        (show) ?\n            <div className=\"loader\"></div> : \"\"\n    )\n}\nexport default Loader;","import './App.css';\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './components/Navbar'\nimport UserCard from './components/UserCard'\nimport Loader from './components/Loader'\nimport Axios from 'axios';\n\nfunction App() {\n  // constant variables\n  const [isClicked, setIsClicked] = useState(0); //shareable state with Navbar\n  const [data, setData] = useState(null);\n  const [isLoader, setIsLoader] = useState(false);\n\n  // api call\n  const getUsers = () => {\n    //showing loader on beginning of api call\n    setIsLoader(true)\n\n    Axios.get(\"https://reqres.in/api/users?page=1\").then(\n      (response) => {\n        console.log(\"api data recieved\")\n        setData(response.data.data);\n\n        //hiding loader at the end of api call\n        setIsLoader(false)\n      }\n    )\n  }\n  \n  // btn state lifing in navbar\n  useEffect(() => {\n    isClicked && getUsers();\n  }, [isClicked])\n\n  return (\n    <div className=\"App\">\n      <Navbar onSetIsClicked={setIsClicked}/>\n      <div className='row'>\n        {/* mapping through the response of the api */}\n        {data&&data.map((val) => {\n          return <UserCard first_name={val.first_name} last_name={val.last_name} email={val.email} avatar={val.avatar}/>\n          \n        })}\n      </div>\n      <Loader show={isLoader}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}